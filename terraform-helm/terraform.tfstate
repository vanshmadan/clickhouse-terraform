{
  "version": 4,
  "terraform_version": "1.2.4",
  "serial": 1,
  "lineage": "f5a22247-8e58-8b0d-446b-7314e0794a31",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "clickhouse",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "clickhouse-cluster",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "clickhouse-cluster",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "21.1",
                "chart": "clickhouse-cluster",
                "name": "clickhouse-cluster",
                "namespace": "test",
                "revision": 1,
                "values": "{\"clickhouse\":{\"clusterName\":\"cluster\",\"defaultStorageClassName\":\"standard\",\"defaultStorageResourceRequest\":\"1Gi\",\"image\":\"radondb/clickhouse-server:21.1.3.32\",\"imagePullPolicy\":\"IfNotPresent\",\"ipv4\":true,\"ipv6\":false,\"livenessProbe\":{\"failureThreshold\":\"3\",\"initialDelaySeconds\":\"30\",\"periodSeconds\":\"30\",\"successThreshold\":\"1\",\"timeoutSeconds\":\"5\"},\"ports\":{\"http\":8123,\"native\":9000},\"resources\":{\"cpu\":\"0.2\",\"memory\":\"1Gi\"},\"service\":{\"enabled\":true,\"loadBalancerIP\":null,\"type\":\"ClusterIP\"},\"shards\":[{\"name\":\"shard0\",\"replicas\":[{\"name\":\"shard0-replica0\"}]}],\"users\":[{\"password\":\"C1ickh0use\",\"username\":\"default\"}]},\"zookeeper\":{\"image\":\"radondb/zookeeper:3.6.1\",\"imagePullPolicy\":\"IfNotPresent\",\"replicas\":2,\"resources\":{\"cpu\":\"0.2\",\"memory\":\"1Gi\"}}}",
                "version": "v1.0"
              }
            ],
            "name": "clickhouse-cluster",
            "namespace": "test",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://radondb.github.io/radondb-clickhouse-kubernetes/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Configuration for the ClickHouse cluster to be started\nclickhouse:\n\n  # default cluster name\n  clusterName: cluster\n\n  ## the limit and require of resources\n  resources:\n    memory: \"1Gi\"\n    cpu: \"0.2\"\n\n  # User Configuration\n  users:\n    - username: default\n      password: C1ickh0use\n  # Port configuration, see https://clickhouse.tech/docs/en/interfaces/\n  ports:\n    # Port for the native CLI interface, see https://clickhouse.tech/docs/en/interfaces/tcp/\n    native: 9000\n\n    # Port for HTTP/REST interface, see https://clickhouse.tech/docs/en/interfaces/http/\n    http: 8123\n\n  # If no explicit configuration for PersistentVolumeClaims is defined with the replicas,\n  # create new PersistentVolumeClaims with this storage class:\n  defaultStorageClassName: standard\n  defaultStorageResourceRequest: 1Gi\n\n  # Shart configuration, see https://clickhouse.tech/docs/en/operations/table_engines/distributed/\n  shards:\n    - name: shard0\n      replicas:\n        - name: shard0-replica0\n\n  # ClickHouse server image configuration\n  image: radondb/clickhouse-server:21.1.3.32\n  imagePullPolicy: IfNotPresent\n\n  # By default, this helm chart will create a service for getting access to the cluster.\n  # Using this configuration it is possible to adjust the service settings.\n  service:\n    # Default create service by the helm chart.\n    enabled: true\n\n    # Type of the service. Use ClusterIP for internal access, LoadBalancer for external access.\n    type: ClusterIP\n\n    # Define the loadBalancerIP if type is set to LoadBalancer and you want to request a special IP address.\n    loadBalancerIP:\n\n  ipv4: true\n  ipv6: false\n\n  livenessProbe:\n    initialDelaySeconds: \"30\"\n    periodSeconds: \"30\"\n    timeoutSeconds: \"5\"\n    failureThreshold: \"3\"\n    successThreshold: \"1\"\n\n# zookeeper configuration\nzookeeper:\n  replicas: 2\n\n  # configuration for zookeeper instance\n  image: radondb/zookeeper:3.6.1\n  imagePullPolicy: IfNotPresent\n\n  resources:\n    memory: \"1Gi\"\n    cpu: \"0.2\"\n\n"
            ],
            "verify": false,
            "version": "v1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
