{
  "version": 4,
  "terraform_version": "1.2.1",
  "serial": 10,
  "lineage": "77e8efb5-df1e-cf0d-451c-7e84ecec69de",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "clickhouse",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "clickhouse-cluster",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "clickhouse-cluster",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "21.1",
                "chart": "clickhouse-cluster",
                "name": "clickhouse-cluster",
                "namespace": "test",
                "revision": 1,
                "values": "{\"busybox\":{\"image\":\"busybox\",\"imagePullPolicy\":\"IfNotPresent\"},\"clickhouse\":{\"clusterName\":\"all-nodes\",\"defaultStorageClassName\":\"standard\",\"defaultStorageResourceRequest\":\"1Gi\",\"image\":\"radondb/clickhouse-server:21.1.3.32\",\"imagePullPolicy\":\"IfNotPresent\",\"ports\":{\"http\":8123,\"tcp\":9000},\"replicascouint\":1,\"resources\":{\"cpu\":\"0.2\",\"memory\":\"1Gi\",\"storage\":\"10Gi\"},\"shardscount\":1,\"svc\":{\"qceip\":null,\"type\":\"ClusterIP\"},\"user\":[{\"networks\":[\"127.0.0.1\",\"::/0\"],\"password\":\"c1ickh0use0perator\",\"username\":\"clickhouse\"}]},\"zookeeper\":{\"image\":\"radondb/zookeeper:3.6.1\",\"imagePullPolicy\":\"IfNotPresent\",\"install\":true,\"port\":2181,\"replicas\":1}}",
                "version": "v1.0"
              }
            ],
            "name": "clickhouse-cluster",
            "namespace": "test",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://radondb.github.io/radondb-clickhouse-kubernetes/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Configuration for the ClickHouse cluster to be started\nclickhouse:\n  # default cluster name\n  clusterName: all-nodes\n  # shards count can not scale in this value.\n  shardscount: 1\n  # replicas count can not modify this value when the cluster has already created.\n  replicascouint: 1\n  \n  # If no explicit configuration for PersistentVolumeClaims is defined with the replicas,\n  # create new PersistentVolumeClaims with this storage class:\n  defaultStorageClassName: standard\n  defaultStorageResourceRequest: 1Gi\n\n  # ClickHouse server image configuration\n  image: radondb/clickhouse-server:21.1.3.32\n  imagePullPolicy: IfNotPresent\n\n  resources:\n    memory: \"1Gi\"\n    cpu: \"0.2\"\n    storage: \"10Gi\"\n\n  # User Configuration\n  user:\n    - username: clickhouse\n      password: c1ickh0use0perator\n      networks:\n        - \"127.0.0.1\"\n        - \"::/0\"\n\n  ports:\n    # Port for the native interface, see https://clickhouse.tech/docs/en/interfaces/tcp/\n    tcp: 9000\n\n    # Port for HTTP/REST interface, see https://clickhouse.tech/docs/en/interfaces/http/\n    http: 8123\n\n  # servicee, value: ClusterIP/NodePort/LoadBalancer\n  # see https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\n  svc:\n    type: ClusterIP\n    # If type: LoadBalancer, can use https://docs.qingcloud.com/product/container/qke/index#%E4%B8%8E-qingcloud-iaas-%E7%9A%84%E6%95%B4%E5%90%88\n    qceip:\n\n# Configuration for the busybox container\nbusybox:\n  image: busybox\n  imagePullPolicy: IfNotPresent\n\n# required, zookeeper configuration\nzookeeper:\n  # If you want to create ZooKeeper cluster by operator, use the following configuration\n  install: true\n  replicas: 1\n  port: 2181\n  image: radondb/zookeeper:3.6.1\n  imagePullPolicy: IfNotPresent\n\n  # If you donâ€™t want Operator to create a ZooKeeper cluster, we also provide a ZooKeeper deployment file,\n  # you can customize the following configuration.\n  # install: false\n  # replicas: specify by yourself\n  # image: radondb/zookeeper:3.6.2\n  # imagePullPolicy: specify by yourself\n  # resources:\n  #   memory: specify by yourself\n  #   cpu: specify by yourself\n  #   storage: specify by yourself\n"
            ],
            "verify": false,
            "version": "v1.0",
            "wait": false,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
